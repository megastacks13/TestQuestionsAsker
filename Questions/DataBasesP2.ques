Given a Relation R and a set of dependencies F, in any possible decomposition of R whose highest normal form is 3NF;Some relation has more than a candidate key;Dependencies are always preserved;All the original dependencies defined in F can be verified through keys in the decomposition relation;F must neccessarily be a canonical cover;1
In an DBMS that has the integrity constraints of SQL;Assertions are defined by CREATE ASSERTION;Functional dependencies are created by CREATE FUNCTIONAL DEPENDENCY;The external keys are defined using OUTER KEY;The candidate keys are defined by CANDIDATE KEY;1
Given F = { AB->CD, C->B, A->BC }, a canonical (minimal) cover of this set of functional dependencies is;AB is already a canonical cover;{AB->CD, C->B};{B->CD, A->C};{A->CD,C->B};4
Given a set F of FD, a set of attributes X, F+, Fc1 and Fc2 (minimal covers of F) and Fc1+, and Fc2+, it is always true;Fc1+=Fc2+;Fc1 ==> Fc2, Fc2 =/=> Fc1;Fc1 =/=> Fc2, Fc2 ==> Fc1;F ==> Fc1, Fc1 =/=> F;1
Given R = (A, B, C, D, E), and a set of functional dependencies F = { CD->EB, E->ACD };We cannot now the normal form of R until we compute the canonical cover of F;R is not on BCNF nor 3NF;The highest normal form of R is 3NF;The highest normal form of R is BCNF;4
Given a referential integrity with a referenced relation r1( primary key K), and a referencing relation r2 (foreign key Î±);Updating r1 may provoke an elimination on r2;Deleting in r1 may provoke an update on r2;Inserting into r1 may provoke deletion in r2;Updating on r2 may provoke an update on r1;2
Given the relation schema R=(A,B,C,D), set of dependencies F={BC->D, D->AC}  and the decomposition R1=(B, C, D) y R2=(D, A), this decomposition;SOME in 3NF but not in BCNF;Need an additional relation;All in BCNF;SOME are NOT in BCNF nor 3NF;1
Given R = (A, B, C, D), and a set of functional dependencies F = { AB->CD, C->B, A->BC };We cannot now the normal form of R until computing the canonical cover of F;Are is not in BCNF nor in 3NF;The highest normal form of R is 3NF;The highest normal form of R is BCNF;2
//; space here
Given a relational schema R, and a decomposition of R into R1 and R2, and given any r(R), r1(R1) and r2(R2), a decomposition is a LOSSY JOIN decomposition due to;r1 |x| r2 has MORE tuples that r;R1 and R2 will never be a Lossy decomposition;r1 |x| r2 has the SAME tuples that r;r1 |x| r2 has LESS tuples that r;1
Given a relation R = (n_student, n_course, grade, call), with the usual meaning (student number identifies a student, course number identifies a course, grade of the student in the course, call for the grade, and F = { n_student -> grade };A functional dependency for n_course is missing;It is NOT possible that a student has several courses;It is NOT possible that there is more than one call;A specific student can have AT MOST ONE single grade call;4